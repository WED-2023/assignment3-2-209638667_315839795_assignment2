openapi: 3.0.3
info:
  title: Recipes API
  description: "API for managing users, recipes, favorites, and history."
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/maytaltomer/RecepiesAPI/1.0.0
    description: SwaggerHub API Auto Mocking
  - url: https://example.com/api
    description: Production server
security:
  - BearerAuth: []
tags:
  - name: User
    description: Operations related to user accounts and preferences
  - name: Recipe
    description: Operations related to recipes and their management
paths:
  /register:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
        required: true
      responses:
        "201":
          description: User registered
        "409":
          description: Username already exists
  /login:
    post:
      tags:
        - User
      summary: Login an existing user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Invalid username or password
  /user/profile:
    get:
      tags:
        - User
      summary: Get logged-in user's profile
      responses:
        "200":
          description: User profile returned
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /user/favorites:
    get:
      tags:
        - User
      summary: Get user's favorite recipes
      responses:
        "200":
          description: List of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /user/my-recipes:
    get:
      tags:
        - User
      summary: Get user's created recipes
      responses:
        "200":
          description: List of recipes created by the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /user/family-recipes:
    get:
      tags:
        - User
      summary: Get user's family recipes
      responses:
        "200":
          description: List of family recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /user/last-search:
    get:
      tags:
        - User
      summary: Get user's last search query
      responses:
        "200":
          description: Last search result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /user/last-viewed-recipes:
    get:
      tags:
        - User
      summary: Get recipes user last viewed
      responses:
        "200":
          description: List of last viewed recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /recipes/search:
    get:
      tags:
        - Recipe
      summary: Search recipes with filters
      parameters:
        - name: query
          in: query
          description: Search keyword
          required: false
          schema:
            type: string
        - name: cuisine
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: diet
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: intolerances
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - popularity
              - time
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of preview recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
  /recipes:
    post:
      tags:
        - Recipe
      summary: Create a new recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRecipe"
        required: true
      responses:
        "201":
          description: Recipe created
        "400":
          description: Invalid recipe data
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /recipes/{id}:
    get:
      tags:
        - Recipe
      summary: Get full recipe by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Full recipe details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FullRecipe"
        "404":
          description: Recipe not found
  /recipes/{id}/favorite:
    post:
      tags:
        - Recipe
      summary: Mark recipe as favorite
      description: Adds the recipe to the authenticated user's list of favorites based on the JWT token
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe added to favorites
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /recipes/{id}/watch:
    post:
      tags:
        - Recipe
      summary: Mark recipe as watched
      description: Adds the recipe to the authenticated user's list of watched based on the JWT token
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe marked as watched
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
components:
  schemas:
    RegisterUser:
      required:
        - country
        - email
        - firstName
        - lastName
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: john_doe
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john@example.com
        country:
          type: string
          example: IL
        password:
          type: string
          format: password
          example: Secret123!
    LoginUser:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          format: password
          example: Secret123!
    NewRecipe:
      required:
        - ingredients
        - instructions
        - servings
        - title
      type: object
      properties:
        title:
          type: string
          example: Grandma's Apple Pie
        image:
          type: string
          format: uri
          example: https://example.com/images/pie.jpg
        cookTime:
          type: string
          example: 45 minutes
        likes:
          type: integer
          example: 0
        isVegan:
          type: boolean
          example: false
        isVegetarian:
          type: boolean
          example: true
        isGlutenFree:
          type: boolean
          example: false
        ingredients:
          type: array
          example:
            - 2 apples
            - 1 cup sugar
          items:
            type: string
        instructions:
          type: string
          example: Slice apples. Mix with sugar. Bake.
        servings:
          type: integer
          example: 4
    PreviewRecipe:
      type: object
      properties:
        id:
          type: string
          example: abc123
        title:
          type: string
          example: Grandma's Apple Pie
        image:
          type: string
          format: uri
          example: https://example.com/images/pie.jpg
        cookTime:
          type: string
          example: 45 minutes
        likes:
          type: integer
          example: 154
        isVegan:
          type: boolean
        isVegetarian:
          type: boolean
        isGlutenFree:
          type: boolean
        isWatched:
          type: boolean
        isFavorite:
          type: boolean
    FullRecipe:
      allOf:
        - $ref: "#/components/schemas/PreviewRecipe"
        - type: object
          properties:
            ingredients:
              type: array
              example:
                - 2 apples
                - 1 cup sugar
              items:
                type: string
            instructions:
              type: string
              example: Slice apples. Mix with sugar. Bake.
            servings:
              type: integer
              example: 4
    inline_response_200:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
